#############################################################################
# Makefile for building: 6502_emu
# Generated by qmake (2.01a) (Qt 4.6.2) on: Dom 14. Jul 22:50:20 2013
# Project:  6502_emu.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_DLL -DQT_GUI_LIB -DQT_CORE_LIB -DQT_THREAD_SUPPORT
CFLAGS        = -g -Wall $(DEFINES)
CXXFLAGS      = -g -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I"h:\Qt\qt\include\QtCore" -I"h:\Qt\qt\include\QtGui" -I"h:\Qt\qt\include" -I"c:\SDL\SDL-1.2.14\include\SDL" -I"h:\Qt\qt\include\ActiveQt" -I"debug" -I"." -I"h:\Qt\qt\mkspecs\win32-g++"
LINK        =        g++
LFLAGS        =        -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -Wl,-subsystem,console -mthreads -Wl
LIBS        =        -L"c:\SDL\SDL-1.2.14\lib" -L"h:\Qt\qt\lib" -lSDL -lQtGuid4 -lQtCored4 
QMAKE         = h:\qt\qt\bin\qmake.exe
IDC           = h:\Qt\qt\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = debug

####### Files

SOURCES       = main.cpp \
		famicom_emu.cpp \
		flip_flop.cpp \
		dma_cpu_spr_ram_port.cpp \
		register\register_16bit.cpp \
		register\register_8bit.cpp \
		register\register.cpp \
		cpu\program_counter.cpp \
		cpu\flags_register.cpp \
		cpu\cpu_2a03.cpp \
		cpu\alu.cpp \
		ppu\ppu_vram_data_port.cpp \
		ppu\ppu_vram_address_port.cpp \
		ppu\ppu_status_register.cpp \
		ppu\ppu_status_port.cpp \
		ppu\ppu_spr_ram_data_port.cpp \
		ppu\ppu_spr_ram_address_port.cpp \
		ppu\ppu_port_interface.cpp \
		ppu\ppu_control_register_2.cpp \
		ppu\ppu_control_register_1.cpp \
		ppu\ppu_2c02.cpp \
		port\port_passthru_8bit.cpp \
		port\port_8bit.cpp \
		inspectors\tile_inspector.cpp \
		inspectors\palette_inspector.cpp \
		inspectors\data_bus_inspector.cpp \
		inspectors\cpu_2a03_inspector.cpp \
		ines\ines_loader.cpp \
		ines\ines_header.cpp \
		data_bus\memory_bank.cpp \
		data_bus\data_bus.cpp \
		data_bus\cpu\cpu_data_bus_m0.cpp \
		data_bus\cpu\cpu_data_bus.cpp \
		data_bus\ppu\ppu_data_bus_m0.cpp \
		data_bus\ppu\ppu_data_bus.cpp \
		apu\apu_port_interface.cpp \
		apu\apu.cpp \
		emulator.cpp \
		data_bus\name_table_mirroring.cpp \
		disassembler.cpp \
		famicom_emu_builder.cpp \
		cartridge_data.cpp \
		memory_bank_model.cpp \
		disassembler_model.cpp \
		controller_port.cpp \
		controller_inputs.cpp \
		ppu\ppu_bkg_scroll_port.cpp \
		tv_set\tv_set.cpp \
		win32_resolver.cpp debug\moc_cpu_2a03.cpp \
		debug\moc_data_bus_inspector.cpp \
		debug\moc_cpu_2a03_inspector.cpp \
		debug\moc_emulator.cpp \
		debug\qrc_resources.cpp
OBJECTS       = debug/main.o \
		debug/famicom_emu.o \
		debug/flip_flop.o \
		debug/dma_cpu_spr_ram_port.o \
		debug/register_16bit.o \
		debug/register_8bit.o \
		debug/register.o \
		debug/program_counter.o \
		debug/flags_register.o \
		debug/cpu_2a03.o \
		debug/alu.o \
		debug/ppu_vram_data_port.o \
		debug/ppu_vram_address_port.o \
		debug/ppu_status_register.o \
		debug/ppu_status_port.o \
		debug/ppu_spr_ram_data_port.o \
		debug/ppu_spr_ram_address_port.o \
		debug/ppu_port_interface.o \
		debug/ppu_control_register_2.o \
		debug/ppu_control_register_1.o \
		debug/ppu_2c02.o \
		debug/port_passthru_8bit.o \
		debug/port_8bit.o \
		debug/tile_inspector.o \
		debug/palette_inspector.o \
		debug/data_bus_inspector.o \
		debug/cpu_2a03_inspector.o \
		debug/ines_loader.o \
		debug/ines_header.o \
		debug/memory_bank.o \
		debug/data_bus.o \
		debug/cpu_data_bus_m0.o \
		debug/cpu_data_bus.o \
		debug/ppu_data_bus_m0.o \
		debug/ppu_data_bus.o \
		debug/apu_port_interface.o \
		debug/apu.o \
		debug/emulator.o \
		debug/name_table_mirroring.o \
		debug/disassembler.o \
		debug/famicom_emu_builder.o \
		debug/cartridge_data.o \
		debug/memory_bank_model.o \
		debug/disassembler_model.o \
		debug/controller_port.o \
		debug/controller_inputs.o \
		debug/ppu_bkg_scroll_port.o \
		debug/tv_set.o \
		debug/win32_resolver.o \
		debug/moc_cpu_2a03.o \
		debug/moc_data_bus_inspector.o \
		debug/moc_cpu_2a03_inspector.o \
		debug/moc_emulator.o \
		debug/qrc_resources.o
DIST          = 
QMAKE_TARGET  = 6502_emu
DESTDIR        = debug\ #avoid trailing-slash linebreak
TARGET         = 6502_emu.exe
DESTDIR_TARGET = debug\6502_emu.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Debug  $(DESTDIR_TARGET)

$(DESTDIR_TARGET): ui_cpu_2a03_inspector.h ui_data_bus_inspector.h ui_tile_inspector.h ui_emulator.h $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) object_script.6502_emu.Debug  $(LIBS)


qmake:  FORCE
	@$(QMAKE) -spec h:\Qt\qt\mkspecs\win32-g++ -win32 CONFIG+=release -o Makefile.Debug 6502_emu.pro

dist:
	$(ZIP) 6502_emu.zip $(SOURCES) $(DIST) 6502_emu.pro h:\Qt\qt\mkspecs\qconfig.pri h:\Qt\qt\mkspecs\features\qt_functions.prf h:\Qt\qt\mkspecs\features\qt_config.prf h:\Qt\qt\mkspecs\features\exclusive_builds.prf h:\Qt\qt\mkspecs\features\default_pre.prf h:\Qt\qt\mkspecs\features\win32\default_pre.prf h:\Qt\qt\mkspecs\features\debug.prf h:\Qt\qt\mkspecs\features\debug_and_release.prf h:\Qt\qt\mkspecs\features\default_post.prf h:\Qt\qt\mkspecs\features\win32\default_post.prf h:\Qt\qt\mkspecs\features\build_pass.prf h:\Qt\qt\mkspecs\features\win32\console.prf h:\Qt\qt\mkspecs\features\win32\rtti.prf h:\Qt\qt\mkspecs\features\win32\exceptions.prf h:\Qt\qt\mkspecs\features\win32\stl.prf h:\Qt\qt\mkspecs\features\shared.prf h:\Qt\qt\mkspecs\features\warn_on.prf h:\Qt\qt\mkspecs\features\qt.prf h:\Qt\qt\mkspecs\features\win32\thread.prf h:\Qt\qt\mkspecs\features\moc.prf h:\Qt\qt\mkspecs\features\resources.prf h:\Qt\qt\mkspecs\features\uic.prf h:\Qt\qt\mkspecs\features\yacc.prf h:\Qt\qt\mkspecs\features\lex.prf h:\Qt\qt\mkspecs\features\include_source_dir.prf  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) debug\main.o debug\famicom_emu.o debug\flip_flop.o debug\dma_cpu_spr_ram_port.o debug\register_16bit.o debug\register_8bit.o debug\register.o debug\program_counter.o debug\flags_register.o debug\cpu_2a03.o debug\alu.o debug\ppu_vram_data_port.o debug\ppu_vram_address_port.o debug\ppu_status_register.o debug\ppu_status_port.o debug\ppu_spr_ram_data_port.o debug\ppu_spr_ram_address_port.o debug\ppu_port_interface.o debug\ppu_control_register_2.o debug\ppu_control_register_1.o debug\ppu_2c02.o debug\port_passthru_8bit.o debug\port_8bit.o debug\tile_inspector.o debug\palette_inspector.o debug\data_bus_inspector.o debug\cpu_2a03_inspector.o debug\ines_loader.o debug\ines_header.o debug\memory_bank.o debug\data_bus.o debug\cpu_data_bus_m0.o debug\cpu_data_bus.o debug\ppu_data_bus_m0.o debug\ppu_data_bus.o debug\apu_port_interface.o debug\apu.o debug\emulator.o debug\name_table_mirroring.o debug\disassembler.o debug\famicom_emu_builder.o debug\cartridge_data.o debug\memory_bank_model.o debug\disassembler_model.o debug\controller_port.o debug\controller_inputs.o debug\ppu_bkg_scroll_port.o debug\tv_set.o debug\win32_resolver.o debug\moc_cpu_2a03.o debug\moc_data_bus_inspector.o debug\moc_cpu_2a03_inspector.o debug\moc_emulator.o debug\qrc_resources.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Debug

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: debug/moc_cpu_2a03.cpp debug/moc_data_bus_inspector.cpp debug/moc_cpu_2a03_inspector.cpp debug/moc_emulator.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) debug\moc_cpu_2a03.cpp debug\moc_data_bus_inspector.cpp debug\moc_cpu_2a03_inspector.cpp debug\moc_emulator.cpp
debug/moc_cpu_2a03.cpp: register/register_8bit.h \
		register/register.h \
		cpu/program_counter.h \
		cpu/flags_register.h \
		cpu/alu.h \
		data_bus/cpu/cpu_data_bus.h \
		data_bus/data_bus.h \
		cpu/cpu_2a03.h
	H:/Qt/qt/bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 cpu\cpu_2a03.h -o debug\moc_cpu_2a03.cpp

debug/moc_data_bus_inspector.cpp: inspectors/data_bus_inspector.h
	H:/Qt/qt/bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 inspectors\data_bus_inspector.h -o debug\moc_data_bus_inspector.cpp

debug/moc_cpu_2a03_inspector.cpp: inspectors/cpu_2a03_inspector.h
	H:/Qt/qt/bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 inspectors\cpu_2a03_inspector.h -o debug\moc_cpu_2a03_inspector.cpp

debug/moc_emulator.cpp: emulator.h
	H:/Qt/qt/bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 emulator.h -o debug\moc_emulator.cpp

compiler_rcc_make_all: debug/qrc_resources.cpp
compiler_rcc_clean:
	-$(DEL_FILE) debug\qrc_resources.cpp
debug/qrc_resources.cpp: resources.qrc \
		Famicom-Console-Set-scaled.JPG
	h:\Qt\qt\bin\rcc.exe -name resources resources.qrc -o debug\qrc_resources.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_cpu_2a03_inspector.h ui_data_bus_inspector.h ui_tile_inspector.h ui_emulator.h
compiler_uic_clean:
	-$(DEL_FILE) ui_cpu_2a03_inspector.h ui_data_bus_inspector.h ui_tile_inspector.h ui_emulator.h
ui_cpu_2a03_inspector.h: cpu_2a03_inspector.ui
	h:\Qt\qt\bin\uic.exe cpu_2a03_inspector.ui -o ui_cpu_2a03_inspector.h

ui_data_bus_inspector.h: data_bus_inspector.ui
	h:\Qt\qt\bin\uic.exe data_bus_inspector.ui -o ui_data_bus_inspector.h

ui_tile_inspector.h: tile_inspector.ui
	h:\Qt\qt\bin\uic.exe tile_inspector.ui -o ui_tile_inspector.h

ui_emulator.h: emulator.ui
	h:\Qt\qt\bin\uic.exe emulator.ui -o ui_emulator.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 



####### Compile

debug/main.o: main.cpp emulator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\main.o main.cpp

debug/famicom_emu.o: famicom_emu.cpp famicom_emu.h \
		cpu/cpu_2a03.h \
		register/register_8bit.h \
		register/register.h \
		cpu/program_counter.h \
		cpu/flags_register.h \
		cpu/alu.h \
		data_bus/cpu/cpu_data_bus.h \
		data_bus/data_bus.h \
		ppu/ppu_2c02.h \
		data_bus/ppu/ppu_data_bus.h \
		apu/apu.h \
		controller_inputs.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\famicom_emu.o famicom_emu.cpp

debug/flip_flop.o: flip_flop.cpp flip_flop.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\flip_flop.o flip_flop.cpp

debug/dma_cpu_spr_ram_port.o: dma_cpu_spr_ram_port.cpp dma_cpu_spr_ram_port.h \
		port/port_8bit.h \
		data_bus/cpu/cpu_data_bus.h \
		data_bus/data_bus.h \
		register/register_8bit.h \
		register/register.h \
		ppu/ppu_spr_ram_data_port.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\dma_cpu_spr_ram_port.o dma_cpu_spr_ram_port.cpp

debug/register_16bit.o: register/register_16bit.cpp register/register_16bit.h \
		register/register.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\register_16bit.o register\register_16bit.cpp

debug/register_8bit.o: register/register_8bit.cpp register/register_8bit.h \
		register/register.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\register_8bit.o register\register_8bit.cpp

debug/register.o: register/register.cpp register/register.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\register.o register\register.cpp

debug/program_counter.o: cpu/program_counter.cpp cpu/program_counter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\program_counter.o cpu\program_counter.cpp

debug/flags_register.o: cpu/flags_register.cpp cpu/flags_register.h \
		register/register_8bit.h \
		register/register.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\flags_register.o cpu\flags_register.cpp

debug/cpu_2a03.o: cpu/cpu_2a03.cpp cpu/cpu_2a03.h \
		register/register_8bit.h \
		register/register.h \
		cpu/program_counter.h \
		cpu/flags_register.h \
		cpu/alu.h \
		data_bus/cpu/cpu_data_bus.h \
		data_bus/data_bus.h \
		6502_common.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\cpu_2a03.o cpu\cpu_2a03.cpp

debug/alu.o: cpu/alu.cpp cpu/alu.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\alu.o cpu\alu.cpp

debug/ppu_vram_data_port.o: ppu/ppu_vram_data_port.cpp ppu/ppu_vram_data_port.h \
		port/port_8bit.h \
		register/register_8bit.h \
		register/register.h \
		register/register_16bit.h \
		ppu/ppu_control_register_1.h \
		data_bus/ppu/ppu_data_bus.h \
		data_bus/data_bus.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\ppu_vram_data_port.o ppu\ppu_vram_data_port.cpp

debug/ppu_vram_address_port.o: ppu/ppu_vram_address_port.cpp ppu/ppu_vram_address_port.h \
		register/register_8bit.h \
		register/register.h \
		register/register_16bit.h \
		port/port_8bit.h \
		flip_flop.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\ppu_vram_address_port.o ppu\ppu_vram_address_port.cpp

debug/ppu_status_register.o: ppu/ppu_status_register.cpp ppu/ppu_status_register.h \
		register/register_8bit.h \
		register/register.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\ppu_status_register.o ppu\ppu_status_register.cpp

debug/ppu_status_port.o: ppu/ppu_status_port.cpp ppu/ppu_status_port.h \
		port/port_8bit.h \
		ppu/ppu_status_register.h \
		register/register_8bit.h \
		register/register.h \
		flip_flop.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\ppu_status_port.o ppu\ppu_status_port.cpp

debug/ppu_spr_ram_data_port.o: ppu/ppu_spr_ram_data_port.cpp ppu/ppu_spr_ram_data_port.h \
		port/port_8bit.h \
		register/register_8bit.h \
		register/register.h \
		data_bus/memory_bank.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\ppu_spr_ram_data_port.o ppu\ppu_spr_ram_data_port.cpp

debug/ppu_spr_ram_address_port.o: ppu/ppu_spr_ram_address_port.cpp ppu/ppu_spr_ram_address_port.h \
		port/port_8bit.h \
		register/register_8bit.h \
		register/register.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\ppu_spr_ram_address_port.o ppu\ppu_spr_ram_address_port.cpp

debug/ppu_port_interface.o: ppu/ppu_port_interface.cpp ppu/ppu_port_interface.h \
		data_bus/ppu/ppu_data_bus.h \
		data_bus/data_bus.h \
		ppu/ppu_status_port.h \
		port/port_8bit.h \
		ppu/ppu_vram_address_port.h \
		register/register_8bit.h \
		register/register.h \
		register/register_16bit.h \
		ppu/ppu_vram_data_port.h \
		ppu/ppu_spr_ram_address_port.h \
		ppu/ppu_spr_ram_data_port.h \
		ppu/ppu_bkg_scroll_port.h \
		data_bus/memory_bank.h \
		port/port_passthru_8bit.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\ppu_port_interface.o ppu\ppu_port_interface.cpp

debug/ppu_control_register_2.o: ppu/ppu_control_register_2.cpp ppu/ppu_control_register_2.h \
		register/register_8bit.h \
		register/register.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\ppu_control_register_2.o ppu\ppu_control_register_2.cpp

debug/ppu_control_register_1.o: ppu/ppu_control_register_1.cpp ppu/ppu_control_register_1.h \
		register/register_8bit.h \
		register/register.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\ppu_control_register_1.o ppu\ppu_control_register_1.cpp

debug/ppu_2c02.o: ppu/ppu_2c02.cpp ppu/ppu_2c02.h \
		register/register_8bit.h \
		register/register.h \
		data_bus/ppu/ppu_data_bus.h \
		data_bus/data_bus.h \
		data_bus/memory_bank.h \
		ppu/ppu_control_register_1.h \
		ppu/ppu_control_register_2.h \
		ppu/ppu_status_register.h \
		ppu/ppu_port_interface.h \
		flip_flop.h \
		register/register_16bit.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\ppu_2c02.o ppu\ppu_2c02.cpp

debug/port_passthru_8bit.o: port/port_passthru_8bit.cpp port/port_passthru_8bit.h \
		port/port_8bit.h \
		register/register_8bit.h \
		register/register.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\port_passthru_8bit.o port\port_passthru_8bit.cpp

debug/port_8bit.o: port/port_8bit.cpp port/port_8bit.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\port_8bit.o port\port_8bit.cpp

debug/tile_inspector.o: inspectors/tile_inspector.cpp inspectors/tile_inspector.h \
		data_bus/ppu/ppu_data_bus.h \
		data_bus/data_bus.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\tile_inspector.o inspectors\tile_inspector.cpp

debug/palette_inspector.o: inspectors/palette_inspector.cpp inspectors/palette_inspector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\palette_inspector.o inspectors\palette_inspector.cpp

debug/data_bus_inspector.o: inspectors/data_bus_inspector.cpp ui_data_bus_inspector.h \
		inspectors/data_bus_inspector.h \
		data_bus/data_bus.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\data_bus_inspector.o inspectors\data_bus_inspector.cpp

debug/cpu_2a03_inspector.o: inspectors/cpu_2a03_inspector.cpp inspectors/cpu_2a03_inspector.h \
		ui_cpu_2a03_inspector.h \
		cpu/cpu_2a03.h \
		register/register_8bit.h \
		register/register.h \
		cpu/program_counter.h \
		cpu/flags_register.h \
		cpu/alu.h \
		data_bus/cpu/cpu_data_bus.h \
		data_bus/data_bus.h \
		memory_bank_model.h \
		data_bus/memory_bank.h \
		disassembler.h \
		disassembler_model.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\cpu_2a03_inspector.o inspectors\cpu_2a03_inspector.cpp

debug/ines_loader.o: ines/ines_loader.cpp ines/ines_loader.h \
		ines/ines_header.h \
		data_bus/name_table_mirroring.h \
		cartridge_data.h \
		data_bus/memory_bank.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\ines_loader.o ines\ines_loader.cpp

debug/ines_header.o: ines/ines_header.cpp ines/ines_header.h \
		data_bus/name_table_mirroring.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\ines_header.o ines\ines_header.cpp

debug/memory_bank.o: data_bus/memory_bank.cpp data_bus/memory_bank.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\memory_bank.o data_bus\memory_bank.cpp

debug/data_bus.o: data_bus/data_bus.cpp data_bus/data_bus.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\data_bus.o data_bus\data_bus.cpp

debug/cpu_data_bus_m0.o: data_bus/cpu/cpu_data_bus_m0.cpp data_bus/cpu/cpu_data_bus_m0.h \
		data_bus/cpu/cpu_data_bus.h \
		data_bus/data_bus.h \
		data_bus/memory_bank.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\cpu_data_bus_m0.o data_bus\cpu\cpu_data_bus_m0.cpp

debug/cpu_data_bus.o: data_bus/cpu/cpu_data_bus.cpp data_bus/cpu/cpu_data_bus.h \
		data_bus/data_bus.h \
		data_bus/memory_bank.h \
		ppu/ppu_port_interface.h \
		apu/apu_port_interface.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\cpu_data_bus.o data_bus\cpu\cpu_data_bus.cpp

debug/ppu_data_bus_m0.o: data_bus/ppu/ppu_data_bus_m0.cpp data_bus/ppu/ppu_data_bus_m0.h \
		data_bus/ppu/ppu_data_bus.h \
		data_bus/data_bus.h \
		data_bus/name_table_mirroring.h \
		data_bus/memory_bank.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\ppu_data_bus_m0.o data_bus\ppu\ppu_data_bus_m0.cpp

debug/ppu_data_bus.o: data_bus/ppu/ppu_data_bus.cpp data_bus/ppu/ppu_data_bus.h \
		data_bus/data_bus.h \
		data_bus/memory_bank.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\ppu_data_bus.o data_bus\ppu\ppu_data_bus.cpp

debug/apu_port_interface.o: apu/apu_port_interface.cpp apu/apu_port_interface.h \
		dma_cpu_spr_ram_port.h \
		port/port_8bit.h \
		data_bus/cpu/cpu_data_bus.h \
		data_bus/data_bus.h \
		controller_port.h \
		register/register_8bit.h \
		register/register.h \
		controller_inputs.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\apu_port_interface.o apu\apu_port_interface.cpp

debug/apu.o: apu/apu.cpp apu/apu.h \
		apu/apu_port_interface.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\apu.o apu\apu.cpp

debug/emulator.o: emulator.cpp emulator.h \
		ui_emulator.h \
		famicom_emu.h \
		famicom_emu_builder.h \
		ppu/ppu_2c02.h \
		register/register_8bit.h \
		register/register.h \
		cpu/cpu_2a03.h \
		cpu/program_counter.h \
		cpu/flags_register.h \
		cpu/alu.h \
		data_bus/cpu/cpu_data_bus.h \
		data_bus/data_bus.h \
		inspectors/data_bus_inspector.h \
		controller_inputs.h \
		cartridge_data.h \
		ines/ines_loader.h \
		tv_set/tv_set.h \
		win32_resolver.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\emulator.o emulator.cpp

debug/name_table_mirroring.o: data_bus/name_table_mirroring.cpp data_bus/name_table_mirroring.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\name_table_mirroring.o data_bus\name_table_mirroring.cpp

debug/disassembler.o: disassembler.cpp disassembler.h \
		data_bus/memory_bank.h \
		6502_common.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\disassembler.o disassembler.cpp

debug/famicom_emu_builder.o: famicom_emu_builder.cpp famicom_emu_builder.h \
		famicom_emu.h \
		data_bus/memory_bank.h \
		cpu/cpu_2a03.h \
		register/register_8bit.h \
		register/register.h \
		cpu/program_counter.h \
		cpu/flags_register.h \
		cpu/alu.h \
		data_bus/cpu/cpu_data_bus.h \
		data_bus/data_bus.h \
		ppu/ppu_2c02.h \
		ppu/ppu_port_interface.h \
		apu/apu.h \
		apu/apu_port_interface.h \
		data_bus/cpu/cpu_data_bus_m0.h \
		data_bus/ppu/ppu_data_bus.h \
		data_bus/ppu/ppu_data_bus_m0.h \
		data_bus/name_table_mirroring.h \
		cartridge_data.h \
		ines/ines_header.h \
		controller_inputs.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\famicom_emu_builder.o famicom_emu_builder.cpp

debug/cartridge_data.o: cartridge_data.cpp cartridge_data.h \
		ines/ines_header.h \
		data_bus/name_table_mirroring.h \
		data_bus/memory_bank.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\cartridge_data.o cartridge_data.cpp

debug/memory_bank_model.o: memory_bank_model.cpp memory_bank_model.h \
		data_bus/memory_bank.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\memory_bank_model.o memory_bank_model.cpp

debug/disassembler_model.o: disassembler_model.cpp disassembler_model.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\disassembler_model.o disassembler_model.cpp

debug/controller_port.o: controller_port.cpp controller_port.h \
		port/port_8bit.h \
		register/register_8bit.h \
		register/register.h \
		controller_inputs.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\controller_port.o controller_port.cpp

debug/controller_inputs.o: controller_inputs.cpp controller_inputs.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\controller_inputs.o controller_inputs.cpp

debug/ppu_bkg_scroll_port.o: ppu/ppu_bkg_scroll_port.cpp ppu/ppu_bkg_scroll_port.h \
		port/port_8bit.h \
		register/register_8bit.h \
		register/register.h \
		register/register_16bit.h \
		flip_flop.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\ppu_bkg_scroll_port.o ppu\ppu_bkg_scroll_port.cpp

debug/tv_set.o: tv_set/tv_set.cpp tv_set/tv_set.h \
		win32_resolver.h \
		random_generator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\tv_set.o tv_set\tv_set.cpp

debug/win32_resolver.o: win32_resolver.cpp win32_resolver.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\win32_resolver.o win32_resolver.cpp

debug/moc_cpu_2a03.o: debug/moc_cpu_2a03.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\moc_cpu_2a03.o debug\moc_cpu_2a03.cpp

debug/moc_data_bus_inspector.o: debug/moc_data_bus_inspector.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\moc_data_bus_inspector.o debug\moc_data_bus_inspector.cpp

debug/moc_cpu_2a03_inspector.o: debug/moc_cpu_2a03_inspector.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\moc_cpu_2a03_inspector.o debug\moc_cpu_2a03_inspector.cpp

debug/moc_emulator.o: debug/moc_emulator.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\moc_emulator.o debug\moc_emulator.cpp

debug/qrc_resources.o: debug/qrc_resources.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\qrc_resources.o debug\qrc_resources.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

